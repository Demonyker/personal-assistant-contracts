// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: contracts/scheduler/v1/scheduler.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AddTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Date          string                 `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Tasks         []string               `protobuf:"bytes,3,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTasksRequest) Reset() {
	*x = AddTasksRequest{}
	mi := &file_contracts_scheduler_v1_scheduler_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTasksRequest) ProtoMessage() {}

func (x *AddTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_scheduler_v1_scheduler_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTasksRequest.ProtoReflect.Descriptor instead.
func (*AddTasksRequest) Descriptor() ([]byte, []int) {
	return file_contracts_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{0}
}

func (x *AddTasksRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AddTasksRequest) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *AddTasksRequest) GetTasks() []string {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type AddTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSuccess     bool                   `protobuf:"varint,2,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddTasksResponse) Reset() {
	*x = AddTasksResponse{}
	mi := &file_contracts_scheduler_v1_scheduler_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTasksResponse) ProtoMessage() {}

func (x *AddTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_scheduler_v1_scheduler_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTasksResponse.ProtoReflect.Descriptor instead.
func (*AddTasksResponse) Descriptor() ([]byte, []int) {
	return file_contracts_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{1}
}

func (x *AddTasksResponse) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Date          string                 `protobuf:"bytes,3,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_contracts_scheduler_v1_scheduler_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_scheduler_v1_scheduler_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_contracts_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{2}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Task) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type GetUserTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserTasksRequest) Reset() {
	*x = GetUserTasksRequest{}
	mi := &file_contracts_scheduler_v1_scheduler_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTasksRequest) ProtoMessage() {}

func (x *GetUserTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_scheduler_v1_scheduler_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTasksRequest.ProtoReflect.Descriptor instead.
func (*GetUserTasksRequest) Descriptor() ([]byte, []int) {
	return file_contracts_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserTasksRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*Task                `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserTasksResponse) Reset() {
	*x = GetUserTasksResponse{}
	mi := &file_contracts_scheduler_v1_scheduler_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTasksResponse) ProtoMessage() {}

func (x *GetUserTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contracts_scheduler_v1_scheduler_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTasksResponse.ProtoReflect.Descriptor instead.
func (*GetUserTasksResponse) Descriptor() ([]byte, []int) {
	return file_contracts_scheduler_v1_scheduler_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserTasksResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

var File_contracts_scheduler_v1_scheduler_proto protoreflect.FileDescriptor

const file_contracts_scheduler_v1_scheduler_proto_rawDesc = "" +
	"\n" +
	"&contracts/scheduler/v1/scheduler.proto\x12\fscheduler.v1\"T\n" +
	"\x0fAddTasksRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04date\x18\x02 \x01(\tR\x04date\x12\x14\n" +
	"\x05tasks\x18\x03 \x03(\tR\x05tasks\"1\n" +
	"\x10AddTasksResponse\x12\x1d\n" +
	"\n" +
	"is_success\x18\x02 \x01(\bR\tisSuccess\"L\n" +
	"\x04Task\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x12\n" +
	"\x04date\x18\x03 \x01(\tR\x04date\".\n" +
	"\x13GetUserTasksRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"@\n" +
	"\x14GetUserTasksResponse\x12(\n" +
	"\x05tasks\x18\x02 \x03(\v2\x12.scheduler.v1.TaskR\x05tasks2\xad\x01\n" +
	"\tScheduler\x12I\n" +
	"\bAddTasks\x12\x1d.scheduler.v1.AddTasksRequest\x1a\x1e.scheduler.v1.AddTasksResponse\x12U\n" +
	"\fGetUserTasks\x12!.scheduler.v1.GetUserTasksRequest\x1a\".scheduler.v1.GetUserTasksResponseB\x18Z\x16contracts/scheduler/v1b\x06proto3"

var (
	file_contracts_scheduler_v1_scheduler_proto_rawDescOnce sync.Once
	file_contracts_scheduler_v1_scheduler_proto_rawDescData []byte
)

func file_contracts_scheduler_v1_scheduler_proto_rawDescGZIP() []byte {
	file_contracts_scheduler_v1_scheduler_proto_rawDescOnce.Do(func() {
		file_contracts_scheduler_v1_scheduler_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_contracts_scheduler_v1_scheduler_proto_rawDesc), len(file_contracts_scheduler_v1_scheduler_proto_rawDesc)))
	})
	return file_contracts_scheduler_v1_scheduler_proto_rawDescData
}

var file_contracts_scheduler_v1_scheduler_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_contracts_scheduler_v1_scheduler_proto_goTypes = []any{
	(*AddTasksRequest)(nil),      // 0: scheduler.v1.AddTasksRequest
	(*AddTasksResponse)(nil),     // 1: scheduler.v1.AddTasksResponse
	(*Task)(nil),                 // 2: scheduler.v1.Task
	(*GetUserTasksRequest)(nil),  // 3: scheduler.v1.GetUserTasksRequest
	(*GetUserTasksResponse)(nil), // 4: scheduler.v1.GetUserTasksResponse
}
var file_contracts_scheduler_v1_scheduler_proto_depIdxs = []int32{
	2, // 0: scheduler.v1.GetUserTasksResponse.tasks:type_name -> scheduler.v1.Task
	0, // 1: scheduler.v1.Scheduler.AddTasks:input_type -> scheduler.v1.AddTasksRequest
	3, // 2: scheduler.v1.Scheduler.GetUserTasks:input_type -> scheduler.v1.GetUserTasksRequest
	1, // 3: scheduler.v1.Scheduler.AddTasks:output_type -> scheduler.v1.AddTasksResponse
	4, // 4: scheduler.v1.Scheduler.GetUserTasks:output_type -> scheduler.v1.GetUserTasksResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_contracts_scheduler_v1_scheduler_proto_init() }
func file_contracts_scheduler_v1_scheduler_proto_init() {
	if File_contracts_scheduler_v1_scheduler_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_contracts_scheduler_v1_scheduler_proto_rawDesc), len(file_contracts_scheduler_v1_scheduler_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_contracts_scheduler_v1_scheduler_proto_goTypes,
		DependencyIndexes: file_contracts_scheduler_v1_scheduler_proto_depIdxs,
		MessageInfos:      file_contracts_scheduler_v1_scheduler_proto_msgTypes,
	}.Build()
	File_contracts_scheduler_v1_scheduler_proto = out.File
	file_contracts_scheduler_v1_scheduler_proto_goTypes = nil
	file_contracts_scheduler_v1_scheduler_proto_depIdxs = nil
}
